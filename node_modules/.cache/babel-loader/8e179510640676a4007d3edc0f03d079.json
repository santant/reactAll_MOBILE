{"ast":null,"code":"import _classCallCheck from \"/Users/mac/Desktop/react/reactA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mac/Desktop/react/reactA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mac/Desktop/react/reactA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mac/Desktop/react/reactA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mac/Desktop/react/reactA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mac/Desktop/react/reactA/src/view/test1.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'redux-thunk';\nimport { addGum, addGumAsync } from \"../index.redux\";\n\nvar Test1 =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Test1, _Component);\n\n  function Test1() {\n    var _this;\n\n    _classCallCheck(this, Test1);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Test1).call(this));\n    _this.state = {\n      number: 0\n    };\n    return _this;\n  }\n\n  _createClass(Test1, [{\n    key: \"render\",\n    value: function render() {\n      var num = this.props.num; // this.setState = {\n      //     number: state.getState()\n      // }\n      // let num = store.getState()\n\n      return React.createElement(\"div\", {\n        className: \"test01\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, num));\n    }\n  }]);\n\n  return Test1;\n}(Component); // 获得数据\n\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    num: state\n  };\n}; // 获得方法,方法是上面倒入的 //将action的所有方法绑定到props上\n\n\nvar mapDispatchToProps = {\n  addGum: addGum,\n  addGumAsync: addGumAsync // connect 第一个是获得数据源，第二个是获得方法源\n\n};\nTest1 = connect(mapStateToProps, mapDispatchToProps)(Test1);\nexport default Test1;","map":{"version":3,"sources":["/Users/mac/Desktop/react/reactA/src/view/test1.js"],"names":["React","Component","connect","addGum","addGumAsync","Test1","state","number","num","props","mapStateToProps","mapDispatchToProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,MAAR,EAAgBC,WAAhB,QAAkC,gBAAlC;;IAEMC,K;;;;;AACF,mBAAc;AAAA;;AAAA;;AACV;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE;AADC,KAAb;AAFU;AAKb;;;;6BAEQ;AACL,UAAIC,GAAG,GAAG,KAAKC,KAAL,CAAWD,GAArB,CADK,CAEL;AACA;AACA;AACA;;AACA,aACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIA,GAAJ,CADJ,CADJ;AAOH;;;;EArBeP,S,GAuBpB;;;AACA,IAAMS,eAAe,GAAG,SAAlBA,eAAkB,CAACJ,KAAD,EAAW;AAC/B,SAAO;AAACE,IAAAA,GAAG,EAAEF;AAAN,GAAP;AACH,CAFD,C,CAGA;;;AACA,IAAMK,kBAAkB,GAAG;AAACR,EAAAA,MAAM,EAANA,MAAD;AAASC,EAAAA,WAAW,EAAXA,WAAT,CAC3B;;AAD2B,CAA3B;AAEAC,KAAK,GAAGH,OAAO,CAACQ,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CN,KAA7C,CAAR;AACA,eAAeA,KAAf","sourcesContent":["import React, {Component} from 'react'\nimport {Button} from 'antd-mobile'\nimport {connect} from 'redux-thunk'\nimport {addGum, addGumAsync} from \"../index.redux\";\n\nclass Test1 extends Component {\n    constructor() {\n        super()\n        this.state = {\n            number: 0\n        }\n    }\n\n    render() {\n        let num = this.props.num\n        // this.setState = {\n        //     number: state.getState()\n        // }\n        // let num = store.getState()\n        return (\n            <div className=\"test01\">\n                <p>{num}</p>\n                {/*<Button onClick={()=>store.dispatch(addGum())}>add</Button>*/}\n                {/*<Button onClick={()=>store.dispatch(addGumAsync())}>add</Button>*/}\n            </div>\n        )\n    }\n}\n// 获得数据\nconst mapStateToProps = (state) => {\n    return {num: state}\n}\n// 获得方法,方法是上面倒入的 //将action的所有方法绑定到props上\nconst mapDispatchToProps = {addGum, addGumAsync}\n// connect 第一个是获得数据源，第二个是获得方法源\nTest1 = connect(mapStateToProps, mapDispatchToProps)(Test1)\nexport default Test1"]},"metadata":{},"sourceType":"module"}